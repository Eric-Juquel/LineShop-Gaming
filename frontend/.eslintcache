[{"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\index.js":"1","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\store.js":"2","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reportWebVitals.js":"3","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\App.js":"4","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\productReducers.js":"5","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\footer\\Footer.js":"6","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\Header.js":"7","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\Carousel3d.js":"8","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\productConstants.js":"9","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\Navbar.js":"10","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\SearchBar.js":"11","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\Logo.js":"12","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\UserAction.js":"13","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\DropdownButton.js":"14","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\tools\\useDetectOutsideClick.js":"15","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\productActions.js":"16","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\Spinner.js":"17","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductsScreen.js":"18","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductCard.js":"19","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\FlipCard.js":"20","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\Rating.js":"21","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductDetail.js":"22","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\ErrorComponent.js":"23","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\Modal.js":"24","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\userReducers.js":"25","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\userConstants.js":"26","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\userActions.js":"27","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\TextField.js":"28","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\LoginScreen.js":"29","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\Logout.js":"30","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\RegisterScreen.js":"31","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\ProfileScreen.js":"32","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\CartScreen.js":"33","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\cartReducers.js":"34","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\cartConstants.js":"35","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\cartActions.js":"36","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ShippingScreen.js":"37","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\SelectField.js":"38","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\CheckoutSteps.js":"39","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\PaymentScreen.js":"40","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\PlaceOrderScreen.js":"41","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\orderReducers.js":"42","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\orderConstants.js":"43","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\orderActions.js":"44","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\OrderScreen.js":"45","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\UserListScreen.js":"46","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\UserItem.js":"47","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\UserEditScreen.js":"48","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\Checkbox.js":"49","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\ProductListScreen.js":"50","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\ProductItem.js":"51","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\ProductEditScreen.js":"52","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\Textarea.js":"53","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\UploadField.js":"54","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\OrderListScreen.js":"55","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\OrderItem.js":"56","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductDetailReview.js":"57"},{"size":555,"mtime":1608977167135,"results":"58","hashOfConfig":"59"},{"size":2598,"mtime":1611051546964,"results":"60","hashOfConfig":"59"},{"size":375,"mtime":1608977167139,"results":"61","hashOfConfig":"59"},{"size":4261,"mtime":1610987788779,"results":"62","hashOfConfig":"59"},{"size":4305,"mtime":1611051397899,"results":"63","hashOfConfig":"59"},{"size":540,"mtime":1609945554803,"results":"64","hashOfConfig":"59"},{"size":631,"mtime":1608977166658,"results":"65","hashOfConfig":"59"},{"size":1453,"mtime":1608977166656,"results":"66","hashOfConfig":"59"},{"size":1524,"mtime":1611051341567,"results":"67","hashOfConfig":"59"},{"size":1360,"mtime":1610537872363,"results":"68","hashOfConfig":"59"},{"size":437,"mtime":1608977166660,"results":"69","hashOfConfig":"59"},{"size":347,"mtime":1608977166658,"results":"70","hashOfConfig":"59"},{"size":1473,"mtime":1610555457167,"results":"71","hashOfConfig":"59"},{"size":1173,"mtime":1610537858297,"results":"72","hashOfConfig":"59"},{"size":701,"mtime":1608977167143,"results":"73","hashOfConfig":"59"},{"size":5182,"mtime":1611051583886,"results":"74","hashOfConfig":"59"},{"size":372,"mtime":1609069332951,"results":"75","hashOfConfig":"59"},{"size":1184,"mtime":1609411919597,"results":"76","hashOfConfig":"59"},{"size":1571,"mtime":1610705786938,"results":"77","hashOfConfig":"59"},{"size":526,"mtime":1609168547347,"results":"78","hashOfConfig":"59"},{"size":1695,"mtime":1609169627274,"results":"79","hashOfConfig":"59"},{"size":5734,"mtime":1611074209341,"results":"80","hashOfConfig":"59"},{"size":952,"mtime":1609839246775,"results":"81","hashOfConfig":"59"},{"size":1378,"mtime":1609410603055,"results":"82","hashOfConfig":"59"},{"size":4135,"mtime":1611051388673,"results":"83","hashOfConfig":"59"},{"size":1508,"mtime":1610386769546,"results":"84","hashOfConfig":"59"},{"size":6569,"mtime":1610729544761,"results":"85","hashOfConfig":"59"},{"size":1006,"mtime":1611050744994,"results":"86","hashOfConfig":"59"},{"size":2334,"mtime":1609940372233,"results":"87","hashOfConfig":"59"},{"size":1011,"mtime":1610449326847,"results":"88","hashOfConfig":"59"},{"size":3833,"mtime":1610540133689,"results":"89","hashOfConfig":"59"},{"size":7925,"mtime":1610538006341,"results":"90","hashOfConfig":"59"},{"size":3888,"mtime":1610537766055,"results":"91","hashOfConfig":"59"},{"size":1205,"mtime":1610031909363,"results":"92","hashOfConfig":"59"},{"size":239,"mtime":1610031837968,"results":"93","hashOfConfig":"59"},{"size":1257,"mtime":1610260942440,"results":"94","hashOfConfig":"59"},{"size":3311,"mtime":1610536362419,"results":"95","hashOfConfig":"59"},{"size":3380,"mtime":1610475282319,"results":"96","hashOfConfig":"59"},{"size":1708,"mtime":1610283828226,"results":"97","hashOfConfig":"59"},{"size":2350,"mtime":1610536412113,"results":"98","hashOfConfig":"59"},{"size":4282,"mtime":1610537809463,"results":"99","hashOfConfig":"59"},{"size":3449,"mtime":1610986506544,"results":"100","hashOfConfig":"59"},{"size":1206,"mtime":1610286977786,"results":"101","hashOfConfig":"59"},{"size":5274,"mtime":1610986466949,"results":"102","hashOfConfig":"59"},{"size":6619,"mtime":1611050118999,"results":"103","hashOfConfig":"59"},{"size":1958,"mtime":1610553436210,"results":"104","hashOfConfig":"59"},{"size":2708,"mtime":1610553517000,"results":"105","hashOfConfig":"59"},{"size":4031,"mtime":1610553019517,"results":"106","hashOfConfig":"59"},{"size":787,"mtime":1610551647790,"results":"107","hashOfConfig":"59"},{"size":3166,"mtime":1610728981205,"results":"108","hashOfConfig":"59"},{"size":1903,"mtime":1610724317218,"results":"109","hashOfConfig":"59"},{"size":7237,"mtime":1611050687935,"results":"110","hashOfConfig":"59"},{"size":1035,"mtime":1610730766352,"results":"111","hashOfConfig":"59"},{"size":1142,"mtime":1610979667272,"results":"112","hashOfConfig":"59"},{"size":1899,"mtime":1610987949470,"results":"113","hashOfConfig":"59"},{"size":1404,"mtime":1611049967021,"results":"114","hashOfConfig":"59"},{"size":2518,"mtime":1611071111143,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"ans6vb",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"118"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"118"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"118"},"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\index.js",[],["247","248"],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\store.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reportWebVitals.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\App.js",["249"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\n\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport classes from \"./ParallaxBack.module.scss\";\r\nimport Carousel3d from \"./components/content/Carousel3d\";\r\n\r\nimport Header from \"./components/header/Header\";\r\n\r\nimport LoginScreen from \"./components/content/auth/LoginScreen\";\r\nimport logout from \"./components/content/auth/Logout\";\r\nimport RegisterScreen from \"./components/content/auth/RegisterScreen\";\r\nimport ProfileScreen from \"./components/content/auth/ProfileScreen\";\r\n\r\nimport UserListScreen from \"./components/content/admin/UserListScreen\";\r\nimport UserEditScreen from \"./components/content/admin/UserEditScreen\";\r\nimport ProductListScreen from './components/content/admin/ProductListScreen'\r\nimport ProductEditScreen from \"./components/content/admin/ProductEditScreen\";\r\nimport OrderListScreen from './components/content/admin/OrderListScreen'\r\n\r\nimport ProductsScreen from \"./components/content/shop/ProductsScreen\";\r\nimport ProductDetail from \"./components/content/shop/ProductDetail\";\r\nimport CartScreen from \"./components/content/shop/CartScreen\";\r\nimport ShippingScreen from \"./components/content/shop/ShippingScreen\";\r\nimport PaymentScreen from \"./components/content/shop/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./components/content/shop/PlaceOrderScreen\";\r\nimport OrderScreen from \"./components/content/shop/OrderScreen\";\r\n\r\nimport Footer from \"./components/footer/Footer\";\r\n\r\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\r\nconst trans1 = (x, y) => `translate3d(${-x / 10}px,${-y / 10}px,0)`;\r\nconst trans2 = (x, y) => `translate3d(${-x / 8 + 35}px,${-y / 8 - 230}px,0)`;\r\nconst trans3 = (x, y) => `translate3d(${-x / 6 - 250}px,${-y / 6 - 200}px,0)`;\r\nconst trans4 = (x, y) => `translate3d(${-x / 3.5}px,${-y / 3.5}px,0)`;\r\n\r\nconst App = () => {\r\n  const [props, set] = useSpring(() => ({\r\n    xy: [0, 0],\r\n    config: { mass: 10, tension: 550, friction: 140 },\r\n  }));\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div\r\n          className={classes.container}\r\n          onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}\r\n        >\r\n          <animated.div\r\n            className={classes.card1}\r\n            style={{ transform: props.xy.interpolate(trans1) }}\r\n          />\r\n          <animated.div\r\n            className={classes.card2}\r\n            style={{ transform: props.xy.interpolate(trans2) }}\r\n          />\r\n          <animated.div\r\n            className={classes.card3}\r\n            style={{ transform: props.xy.interpolate(trans3) }}\r\n          />\r\n          <div className=\"container\">\r\n            <header className=\"header\">\r\n              <Header />\r\n            </header>\r\n            <main className=\"main\">\r\n              <Route exact path=\"/\" component={Carousel3d} />\r\n              <Route path=\"/products\" component={ProductsScreen} />\r\n              <Route path=\"/product/:id\" component={ProductDetail} />\r\n              <Route path=\"/cart/:id?\" component={CartScreen} />\r\n              <Route path=\"/shipping\" component={ShippingScreen} />\r\n              <Route path=\"/payment\" component={PaymentScreen} />\r\n              <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n              <Route path=\"/order/:id\" component={OrderScreen} />\r\n              <Route path=\"/login\" component={LoginScreen} />\r\n              <Route path=\"/logout\" component={logout} />\r\n              <Route path=\"/register\" component={RegisterScreen} />\r\n              <Route path=\"/profile\" component={ProfileScreen} />\r\n              <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n              <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n              <Route path='/admin/productlist' component={ProductListScreen} />\r\n              <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\r\n              <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n            </main>\r\n            <footer className=\"footer\">\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\footer\\Footer.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\Header.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\Carousel3d.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\productConstants.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\Navbar.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\SearchBar.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\Logo.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\UserAction.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\header\\DropdownButton.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\tools\\useDetectOutsideClick.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\productActions.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\Spinner.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductsScreen.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductCard.js",["250","251","252"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport classes from \"./ProductCard.module.scss\";\r\nimport FlipCard from \"./FlipCard\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    _id,\r\n    name,\r\n    rating,\r\n    price,\r\n    image,\r\n    description,\r\n    countInStock,\r\n  } = product;\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${_id}?qty=${1}`);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.card}>\r\n      <div className={classes.title}>\r\n        <Link to={`/product/${_id}`}>\r\n          <p>{name}</p>\r\n        </Link>\r\n      </div>\r\n      <div className={classes.flipCard}>\r\n        <Link to={`/product/${_id}`}>\r\n          <FlipCard product={product} />\r\n        </Link>\r\n      </div>\r\n      <div className={classes.detail}>\r\n        <p className={classes.price}>\r\n          {price}\r\n          {\" €\"}\r\n        </p>\r\n        <hr />\r\n        <p className={classes.stock}>\r\n          {countInStock === 0 ? \"Out of stock\" : `${countInStock} in stock`}\r\n        </p>\r\n        <hr />\r\n        <div className={classes.rating}>\r\n          <Rating\r\n            value={product.rating}\r\n            text={` (${product.numReviews})`}\r\n            color={\"yellow\"}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        className={classes.btn}\r\n        disabled={countInStock === 0}\r\n        onClick={() => addToCartHandler()}\r\n      >\r\n        Add to cart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\FlipCard.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\Rating.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductDetail.js",["253"],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\ErrorComponent.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\Modal.js",["254"],"import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useEffect,\r\n} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classes from \"./Modal.module.scss\";\r\n\r\nconst Modal = forwardRef((props, ref) => {\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      openModal: () => onOpen(),\r\n      closeModal: () => onClose(),\r\n    };\r\n  });\r\n\r\n  // close Modal on  escape\r\n\r\n  // const handleHideDropdown = (event) => {\r\n  //   if (event.key === \"Escape\") {\r\n  //     onClose();\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   document.addEventListener(\"keydown\", handleHideDropdown, true);\r\n  //   return () => {\r\n  //     document.removeEventListener(\"keydown\", handleHideDropdown, true);\r\n  //   };\r\n  // });\r\n\r\n  const onOpen = () => {\r\n    setDisplay(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setDisplay(false);\r\n  };\r\n\r\n  if (display) {\r\n    return ReactDOM.createPortal(\r\n      <div className={classes.modalWrapper}>\r\n        <div className={classes.modalBackdrop}>\r\n          <div\r\n            className={classes.modalBox}\r\n            style={{ height: props.height, width: props.width }}\r\n          >\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      document.getElementById(\"modal-root\")\r\n    );\r\n  } else return null;\r\n});\r\n\r\n\r\nexport default Modal;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\userConstants.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\userActions.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\TextField.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\LoginScreen.js",["255"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./LoginScreen.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport TextField from \"../forms/TextField\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { login } from \"../../../actions/userActions\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(login(data.email, data.password));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1>Sign In</h1>\r\n      <div className={classes.message}>\r\n        {loading && <Spinner />}\r\n        {error && <p>{error}</p>}\r\n      </div>\r\n      <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"email\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"password\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        <div className={classes.new}>\r\n          <p>\r\n            New Customer ?{\" \"}\r\n            <Link\r\n              to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n            >\r\n              Register\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\Logout.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\RegisterScreen.js",["256"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./RegisterScreen.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport TextField from \"../forms/TextField\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { registerUser } from \"../../../actions/userActions\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.password !== data.confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        registerUser(data.firstName, data.lastName, data.email, data.password)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1>Sign Up</h1>\r\n      <div className={classes.message}>\r\n        {loading && <Spinner />}\r\n        {error && <p>{error}</p>}\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n      <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"text\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"text\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"email\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"password\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}></div>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"password\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n\r\n        <button className={classes.submit} type=\"submit\">Register</button>\r\n        <div className={classes.account}>\r\n          <p>\r\n            Have an Account ?{\" \"}\r\n            <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n              Login\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\auth\\ProfileScreen.js",["257","258","259"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classes from \"./ProfileScreen.module.scss\";\r\nimport { GiSplitCross } from \"react-icons/gi\";\r\nimport Spinner from \"../../Spinner\";\r\nimport ErrorComponent from \"../../ErrorComponent\";\r\nimport TextField from \"../forms/TextField\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from \"../../../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../../../constants/userConstants\";\r\nimport { listMyOrders } from \"../../../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success, error: errorUpdate } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || (!user.firstName && !user.lastName)) {\r\n        setMessage(null);\r\n        // dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setFirstName(user.firstName);\r\n        setLastName(user.lastName);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"profile data\", data);\r\n    if (data.password !== data.confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          email: data.email,\r\n          password: data.password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.profile}>\r\n        <h1>User Profile</h1>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : errorUpdate ? (\r\n          <ErrorComponent err={errorUpdate} />\r\n        ) : (\r\n          <>\r\n            <div className={classes.message}>\r\n              {message && <p className={classes.danger}>{message}</p>}\r\n              {success && <p className={classes.success}>Profile Updated</p>}\r\n            </div>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n              <div className={classes.formGroup}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  register={register}\r\n                  error={errors}\r\n                  inputwidth=\"100%\"\r\n                  inputheight=\"4rem\"\r\n                  label=\"First Name\"\r\n                  name=\"firstName\"\r\n                  placeholder=\"First Name\"\r\n                  defaultValue={firstName}\r\n                  mandatory={true}\r\n                />\r\n              </div>\r\n              <div className={classes.formGroup}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  register={register}\r\n                  error={errors}\r\n                  inputwidth=\"100%\"\r\n                  inputheight=\"4rem\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  placeholder=\"Last Name\"\r\n                  defaultValue={lastName}\r\n                  mandatory={true}\r\n                />\r\n              </div>\r\n              <div className={classes.formGroup}>\r\n                <TextField\r\n                  type=\"email\"\r\n                  register={register}\r\n                  error={errors}\r\n                  inputwidth=\"100%\"\r\n                  inputheight=\"4rem\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  defaultValue={email}\r\n                  mandatory={true}\r\n                />\r\n              </div>\r\n              <div className={classes.formGroup}>\r\n                <TextField\r\n                  type=\"password\"\r\n                  register={register}\r\n                  error={errors}\r\n                  inputwidth=\"100%\"\r\n                  inputheight=\"4rem\"\r\n                  label=\"New Password\"\r\n                  name=\"password\"\r\n                  placeholder=\"New Password\"\r\n                  mandatory={false}\r\n                />\r\n              </div>\r\n              <div className={classes.formGroup}></div>\r\n              <div className={classes.formGroup}>\r\n                <TextField\r\n                  type=\"password\"\r\n                  register={register}\r\n                  error={errors}\r\n                  inputwidth=\"100%\"\r\n                  inputheight=\"4rem\"\r\n                  label=\"Confirm New Password\"\r\n                  name=\"confirmPassword\"\r\n                  placeholder=\"Confirm New Password\"\r\n                  mandatory={false}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\">Update</button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className={classes.orders}>\r\n        <h1>My Orders</h1>\r\n        {loadingOrders ? (\r\n          <Spinner />\r\n        ) : error ? (\r\n          <ErrorComponent err={error} />\r\n        ) : (\r\n          <div className={classes.orderTable}>\r\n            <div className={classes.entitled}>\r\n              <h2 className={classes.cell}>ID</h2>\r\n              <h2 className={classes.cell}>DATE</h2>\r\n              <h2 className={classes.cell}>TOTAL</h2>\r\n              <h2 className={classes.cell}>PAID</h2>\r\n              <h2 className={classes.cell}>DELIVERED</h2>\r\n              <h2 className={classes.cell}>{' '}</h2>\r\n            </div>\r\n\r\n            <div className={classes.items}>\r\n              {orders.length === 0 ? (\r\n                <p>No Current Order</p>\r\n              ) : (\r\n                orders.map((order) => (\r\n                  <div key={order._id} className={classes.row}>\r\n                    <div className={classes.cell}>{order._id}</div>\r\n                    <div className={classes.cell}>\r\n                      <Moment format=\"YYYY/MM/DD\">{order.createdAt}</Moment>\r\n                    </div>\r\n                    <div className={classes.cell}>\r\n                      {new Intl.NumberFormat().format(order.totalPrice)}\r\n                    </div>\r\n                    <div className={classes.cell}>\r\n                      {order.isPaid ? (\r\n                        <Moment format=\"YYYY/MM/DD\">{order.paidAt}</Moment>\r\n                      ) : (\r\n                        <GiSplitCross />\r\n                      )}\r\n                    </div>\r\n                    <div className={classes.cell}>\r\n                      {order.isDelivered ? (\r\n                        <Moment format=\"YYYY/MM/DD\">{order.deliveredAt}</Moment>\r\n                      ) : (\r\n                        <GiSplitCross />\r\n                      )}\r\n                    </div>\r\n                    <div className={classes.cell}>\r\n                      <Link to={`/order/${order._id}`}>\r\n                        <button>Details</button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\CartScreen.js",["260"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IoIosReturnLeft } from \"react-icons/io\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { GiEmptyMetalBucketHandle } from \"react-icons/gi\";\r\nimport classes from \"./CartScreen.module.scss\";\r\nimport { addToCart, removeFromCart } from \"../../../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, history, location }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const goBackHandler = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.cart}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <div className={classes.items}>\r\n            <div className={classes.empty}>\r\n              <h4>Your cart is empty</h4>\r\n              <button onClick={() => goBackHandler()}>Go Back</button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.items}>\r\n            {cartItems.map((item) => (\r\n              <div className={classes.item} key={item.product}>\r\n                <img src={item.image} alt={item.name} />\r\n                <h3>\r\n                  <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                </h3>\r\n                <p>{item.price} €</p>\r\n                <div className={classes.qty}>\r\n                  <div className={classes.select}>\r\n                    <select\r\n                      disabled={item.countInStock === 0}\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <span className=\"focus\"></span>\r\n                  </div>\r\n                </div>\r\n                <GiEmptyMetalBucketHandle\r\n                  onClick={() => removeFromCartHandler(item.product)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={classes.checkout}>\r\n        <div>\r\n          <h3>Subtotal </h3>\r\n        </div>\r\n\r\n        <div style={{ padding: \"0 20%\" }}>\r\n          <p>Items :</p>\r\n          <p>{cartItems.reduce((acc, item) => acc + item.qty, 0)}</p>\r\n        </div>\r\n        <div style={{ padding: \"0 20%\" }}>\r\n          <p>Price :</p>\r\n          <p>\r\n            {new Intl.NumberFormat().format(\r\n              cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)\r\n            )}{\" \"}\r\n            €\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <button disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n            Proceed to Checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={classes.shopping}>\r\n        <Link to=\"/products\">\r\n          <IoIosReturnLeft />\r\n          Continue shopping\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\cartActions.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ShippingScreen.js",["261"],"import React, { useState } from \"react\";\r\nimport classes from \"./ShippingScreen.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport countryList from \"react-select-country-list\";\r\nimport TextField from \"../forms/TextField\";\r\nimport SelectField from \"../forms/SelectField\";\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../../../actions/cartActions\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n\r\n  const countriesOption = countryList().getData();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(saveShippingAddress(data));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <div className={classes.message}>{message && <p>{message}</p>}</div>\r\n      <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"text\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Address\"\r\n            name=\"address\"\r\n            placeholder=\"Enter Address\"\r\n            defaultValue={shippingAddress.address}\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"text\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"City\"\r\n            name=\"city\"\r\n            placeholder=\"Enter City\"\r\n            defaultValue={shippingAddress.city}\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <TextField\r\n            type=\"text\"\r\n            register={register}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Postal Code\"\r\n            name=\"postalCode\"\r\n            placeholder=\"Enter Postal Code\"\r\n            defaultValue={shippingAddress.postalCode}\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <SelectField\r\n            control={control}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Country\"\r\n            name=\"country\"\r\n            placeholder=\"Enter Country\"\r\n            options={countriesOption}\r\n            menuPlacement=\"top\"\r\n            isMulti={false}\r\n            defaultValue={shippingAddress.country}\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.continue}>\r\n          <button className={classes.btn} type=\"submit\">\r\n            <span className={classes.btn__visible}>Continue</span>\r\n            <span className={classes.btn__invisible}>Payment</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\SelectField.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\CheckoutSteps.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\PaymentScreen.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\PlaceOrderScreen.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\actions\\orderActions.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\OrderScreen.js",["262"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Moment from \"react-moment\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classes from \"./OrderScreen.module.scss\";\r\nimport ErrorComponent from \"../../ErrorComponent\";\r\nimport Spinner from \"../../Spinner\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../../../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../../../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    order.itemsPrice = order.orderItems.reduce(\r\n      (acc, item) => acc + item.price * item.qty,\r\n      0\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      console.log(clientId);\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || order._id !== orderId || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver, userInfo]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const successDeliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return error ? (\r\n    <ErrorComponent err={error} />\r\n  ) : loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className={classes.container}>\r\n      <h1>\r\n        Order <span>{order._id}</span>\r\n      </h1>\r\n      <div className={classes.content}>\r\n        <div className={classes.orderShipping}>\r\n          <h2>Shipping</h2>\r\n          <div className={classes.contact}>\r\n            <strong>Contact: </strong> {order.user.firstName}{\" \"}\r\n            {order.user.lastName}\r\n            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n          </div>\r\n          <div className={classes.address}>\r\n            <strong>Address: </strong>\r\n            {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n            {order.shippingAddress.postalCode},{\" \"}\r\n            {order.shippingAddress.country.label.toUpperCase()}\r\n          </div>\r\n          {order.isDelivered ? (\r\n            <div className={classes.statusSuccess}>\r\n              Delidery on{\" \"}\r\n              <Moment format=\"YYYY/MM/DD\">{order.deliveredAt}</Moment>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.statusDanger}>\r\n              {loadingDeliver ? <Spinner /> : \"Not Delivered\"}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={classes.orderPayment}>\r\n          <h2>Payment Method</h2>\r\n          <p>\r\n            <strong>Method:</strong>\r\n            {order.paymentMethod}\r\n          </p>\r\n          {order.isPaid ? (\r\n            <div className={classes.statusSuccess}>\r\n              Paid on <Moment format=\"YYYY/MM/DD\">{order.paidAt}</Moment>{\" \"}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.statusDanger}>Not Paid</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.order}>\r\n          <h2>Order Items</h2>\r\n          <div className={classes.items}>\r\n            {order.orderItems.length === 0 ? (\r\n              <p>Order is empty</p>\r\n            ) : (\r\n              order.orderItems.map((item) => (\r\n                <div key={item.product} className={classes.item}>\r\n                  <img src={item.image} alt={item.name} />\r\n                  <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  <p>\r\n                    {item.qty} x {item.price} € ={\" \"}\r\n                    <span>\r\n                      {new Intl.NumberFormat().format(item.qty * item.price)} €\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={classes.summary}>\r\n          <div className={classes.card}>\r\n            <div>\r\n              <h5>Order Summary</h5>\r\n            </div>\r\n            <div>\r\n              <label>Items :</label>\r\n              <p>{new Intl.NumberFormat().format(order.itemsPrice)} €</p>\r\n            </div>\r\n            <div>\r\n              <label>Shipping :</label>\r\n              <p>{order.shippingPrice} €</p>\r\n            </div>\r\n            <div>\r\n              <label>Tax :</label>\r\n              <p>{order.taxPrice} €</p>\r\n            </div>\r\n            <div>\r\n              <label>Total :</label>\r\n              <p>{new Intl.NumberFormat().format(order.totalPrice)} €</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!order.isPaid && (\r\n          <div className={classes.paypalBtn}>\r\n            {loadingPay && <Spinner />}\r\n            {!sdkReady ? (\r\n              <Spinner />\r\n            ) : (\r\n              <PayPalButton\r\n                amount={order.totalPrice}\r\n                onSuccess={successPaymentHandler}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n          <button className={classes.deliver} onClick={successDeliverHandler}>\r\n            Mark As Delivered\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\UserListScreen.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\UserItem.js",["263","264","265","266","267"],"import React, { useRef } from \"react\";\r\nimport classes from \"./UserListScreen.module.scss\";\r\nimport { GiSplitCross } from \"react-icons/gi\";\r\nimport { GiHangingSign } from \"react-icons/gi\";\r\nimport { GiKing } from \"react-icons/gi\";\r\nimport { GiQueenCrown } from \"react-icons/gi\";\r\nimport { GiStrong } from \"react-icons/gi\";\r\nimport { FaUserGraduate } from \"react-icons/fa\";\r\nimport { FaUserLock } from \"react-icons/fa\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\nimport { FaUserMinus } from \"react-icons/fa\";\r\nimport Modal from \"../../Modal\";\r\n\r\nconst UserItem = ({ user, userInfo, deleteUser, editUser }) => {\r\n  const modalRef = useRef();\r\n\r\n  const onBack = () => {\r\n    modalRef.current.closeModal();\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    modalRef.current.openModal();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.row}>\r\n      <div className={classes.cell}>{user._id}</div>\r\n      <div className={classes.cell}>\r\n        {user.firstName.charAt(0).toUpperCase() +\r\n          user.firstName.substring(1).toLowerCase()}{\" \"}\r\n        {user.lastName.toUpperCase()}\r\n      </div>\r\n      <div className={classes.cell}>\r\n        <a href={`mailto:${user.email}`}>{user.email}</a>{\" \"}\r\n      </div>\r\n      <div className={classes.cell}>\r\n        {user.isAdmin ? (\r\n          <span className={classes.success}>\r\n            <FaUserGraduate />\r\n          </span>\r\n        ) : (\r\n          <span className={classes.danger}>\r\n            <FaUserLock />\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className={classes.cell}>\r\n        <button\r\n          title=\"Edit User\"\r\n          className={classes.edit}\r\n          disabled={userInfo._id === user._id}\r\n          onClick={() => editUser(`/admin/user/${user._id}/edit`)}\r\n        >\r\n          <FaUserEdit />\r\n        </button>\r\n        <button\r\n          title=\"Delete User\"\r\n          className={classes.delete}\r\n          disabled={userInfo._id === user._id}\r\n          onClick={() => deleteHandler()}\r\n        >\r\n          <FaUserMinus />\r\n        </button>\r\n      </div>\r\n      <Modal ref={modalRef} height=\"20%\" width=\"30%\">\r\n        <div className={classes.modal}>\r\n          <h4>\r\n            Delete{\" \"}\r\n            {user.firstName.charAt(0).toUpperCase() +\r\n              user.firstName.substring(1).toLowerCase()}{\" \"}\r\n            {user.lastName.toUpperCase()} ?\r\n          </h4>\r\n          <button className={classes.cancel} onClick={onBack}>\r\n            No\r\n          </button>\r\n          <button\r\n            className={classes.validate}\r\n            onClick={() => deleteUser(user._id)}\r\n          >\r\n            Yes\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\UserEditScreen.js",["268"],"import React, { useEffect } from \"react\";\r\nimport classes from \"./UserEditScreen.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IoIosReturnLeft } from \"react-icons/io\";\r\nimport TextField from \"../forms/TextField\";\r\nimport Checkbox from \"../forms/Checkbox\";\r\nimport Spinner from \"../../Spinner\";\r\nimport ErrorComponent from \"../../ErrorComponent\";\r\nimport { getUserDetails, updateUser } from \"../../../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../../../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.firstName || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      }\r\n    }\r\n  }, [dispatch, user, userId, successUpdate, history]);\r\n\r\n  const goBackHandler = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    dispatch(\r\n      updateUser({\r\n        _id: userId,\r\n        firstname: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        isAdmin: data.isAdmin,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1>Edit User</h1>\r\n\r\n      {loading || loadingUpdate ? (\r\n        <Spinner />\r\n      ) : error || errorUpdate ? (\r\n        <ErrorComponent err={error} />\r\n      ) : (\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={classes.formGroup}>\r\n            <TextField\r\n              type=\"text\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              defaultValue={user.firstName}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n          <div className={classes.formGroup}>\r\n            <TextField\r\n              type=\"text\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              defaultValue={user.lastName}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n          <div className={classes.formGroup}>\r\n            <TextField\r\n              type=\"email\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              defaultValue={user.email}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.formGroup}>\r\n            <Checkbox\r\n              register={register}\r\n              error={errors}\r\n              name=\"isAdmin\"\r\n              label=\"Is Admin\"\r\n              defaultChecked={user.isAdmin}\r\n            />\r\n          </div>\r\n\r\n          <button className={classes.submit} type=\"submit\">\r\n            Update\r\n          </button>\r\n          <button className={classes.back} onClick={goBackHandler}>\r\n            <IoIosReturnLeft />\r\n            &nbsp;\r\n            <span className={classes.text}> Go Back</span>\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\Checkbox.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\ProductListScreen.js",["269"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classes from \"./ProductListScreen.module.scss\";\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport Spinner from \"../../Spinner\";\r\nimport ErrorComponent from \"../../ErrorComponent\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../../../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../../../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    createdProduct\r\n  } = productCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    successDelete,\r\n    userInfo,\r\n    successCreate,\r\n    createdProduct,\r\n  ]);\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    dispatch(deleteProduct(id));\r\n  };\r\n\r\n  const onEdit = (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.title}>\r\n        <h1>Products</h1>\r\n        <button onClick={createProductHandler}>\r\n          <FaPlusCircle />\r\n          CREATE PRODUCT\r\n        </button>\r\n      </div>\r\n\r\n      {loading || loadingDelete || loadingCreate ? (\r\n        <Spinner />\r\n      ) : error || errorDelete || loadingCreate ? (\r\n        <ErrorComponent err={error} />\r\n      ) : (\r\n        <div className={classes.productsTable}>\r\n          <div className={classes.entitled}>\r\n            <h2 className={classes.cell}>ID</h2>\r\n            <h2 className={classes.cell}>NAME</h2>\r\n            <h2 className={classes.cell}>IN STOCK</h2>\r\n            <h2 className={classes.cell}>PRICE</h2>\r\n            <h2 className={classes.cell}>CATEGORY</h2>\r\n            <h2 className={classes.cell}>BRAND</h2>\r\n            <h2 className={classes.cell}> </h2>\r\n          </div>\r\n\r\n          <div className={classes.items}>\r\n            {products.map((product) => (\r\n              <ProductItem\r\n                key={product._id}\r\n                product={product}\r\n                deleteProduct={onDelete}\r\n                editProduct={onEdit}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\ProductItem.js",["270"],"import React, { useRef } from \"react\";\r\nimport classes from \"./ProductListScreen.module.scss\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { GiEmptyMetalBucketHandle } from \"react-icons/gi\";\r\n\r\nimport Modal from \"../../Modal\";\r\n\r\nconst ProductItem = ({ product, deleteProduct, editProduct }) => {\r\n  const modalRef = useRef();\r\n\r\n  const onBack = () => {\r\n    modalRef.current.closeModal();\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    modalRef.current.openModal();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.row}>\r\n      <div className={classes.cell}>{product._id}</div>\r\n      <div className={classes.cell}>{product.name}</div>\r\n      <div className={classes.cell}>{product.countInStock}</div>\r\n      <div className={classes.cell}>{product.price} €</div>\r\n      <div className={classes.cell}>{product.category}</div>\r\n      <div className={classes.cell}>{product.brand}</div>\r\n      <div className={classes.cell}>\r\n        <button\r\n          title=\"Edit Product\"\r\n          className={classes.edit}\r\n          onClick={() => editProduct(`/admin/product/${product._id}/edit`)}\r\n        >\r\n          <FaRegEdit/>\r\n        </button>\r\n        <button\r\n          title=\"Delete Product\"\r\n          className={classes.delete}\r\n          onClick={() => deleteHandler()}\r\n        >\r\n          <GiEmptyMetalBucketHandle/>\r\n        </button>\r\n      </div>\r\n      <Modal ref={modalRef} height=\"20%\" width=\"30%\">\r\n        <div className={classes.modal}>\r\n          <h4>Delete {product.name} ?</h4>\r\n          <button className={classes.cancel} onClick={onBack}>\r\n            No\r\n          </button>\r\n          <button\r\n            className={classes.validate}\r\n            onClick={() => deleteProduct(product._id)}\r\n          >\r\n            Yes\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\ProductEditScreen.js",["271","272"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ProductEditScreen.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IoIosReturnLeft } from \"react-icons/io\";\r\nimport TextField from \"../forms/TextField\";\r\nimport TextareaField from \"../forms/Textarea\";\r\nimport Checkbox from \"../forms/Checkbox\";\r\nimport Spinner from \"../../Spinner\";\r\nimport ErrorComponent from \"../../ErrorComponent\";\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../../../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../../../constants/productConstants\";\r\nimport UploadField from \"../forms/UploadField\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  // console.log(\"product\", product);\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      }\r\n    }\r\n  }, [dispatch, product, productId, history, successUpdate]);\r\n\r\n  const goBackHandler = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(\"data\", data);\r\n\r\n    let payload = {\r\n      _id: productId,\r\n      name: data.name,\r\n      price: data.price,\r\n      image: data.imageUrl,\r\n      brand: data.brand,\r\n      category: data.category,\r\n      countInStock: data.countInStock,\r\n      description: data.description,\r\n    };\r\n\r\n    if (data.imageFile) {\r\n      const file = data.imageFile[0];\r\n      const formData = new FormData();\r\n      formData.append(\"image\", file);\r\n      setUploading(true);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n        payload.image = data\r\n        setUploading(false)\r\n      } catch (error) {}\r\n      setUploading(false)\r\n    }\r\n\r\n    console.log('payload',payload)\r\n\r\n    dispatch(updateProduct(payload));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1>Edit Product</h1>\r\n\r\n      {loading || loadingUpdate ? (\r\n        <Spinner />\r\n      ) : error || errorUpdate ? (\r\n        <ErrorComponent err={error} />\r\n      ) : (\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={`${classes.formGroup} ${classes.name}`}>\r\n            <TextField\r\n              type=\"text\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              defaultValue={product.name}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n          <div className={`${classes.formGroup} ${classes.price}`}>\r\n            <TextField\r\n              type=\"number\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Price\"\r\n              name=\"price\"\r\n              placeholder=\"Enter Price\"\r\n              defaultValue={product.price}\r\n              mandatory={true}\r\n              step=\"0.01\"\r\n            />\r\n          </div>\r\n          <div className={`${classes.formGroup} ${classes.image}`}>\r\n            <TextField\r\n              type=\"text\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Image Url\"\r\n              name=\"imageUrl\"\r\n              placeholder=\"Enter image url\"\r\n              defaultValue={product.image}\r\n              mandatory={false}\r\n            />\r\n          </div>\r\n          <div className={`${classes.formGroup} ${classes.upload}`}>\r\n            <UploadField\r\n              type=\"file\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Image File\"\r\n              name=\"imageFile\"\r\n              placeholder=\"Browse image file\"\r\n              mandatory={false}\r\n              loading={uploading}\r\n            />\r\n          </div>\r\n          <div className={`${classes.formGroup} ${classes.brand}`}>\r\n            <TextField\r\n              type=\"text\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Brand\"\r\n              name=\"brand\"\r\n              placeholder=\"Enter Brand\"\r\n              defaultValue={product.brand}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n          <div className={`${classes.formGroup} ${classes.countInStock}`}>\r\n            <TextField\r\n              type=\"number\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"In Stock\"\r\n              name=\"countInStock\"\r\n              placeholder=\"In Stock\"\r\n              defaultValue={product.countInStock}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n          <div className={`${classes.formGroup} ${classes.category}`}>\r\n            <TextField\r\n              type=\"text\"\r\n              register={register}\r\n              error={errors}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"4rem\"\r\n              label=\"Category\"\r\n              name=\"category\"\r\n              placeholder=\"Enter Category\"\r\n              defaultValue={product.category}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n          <div className={`${classes.formGroup} ${classes.description}`}>\r\n            <TextareaField\r\n              register={register}\r\n              error={errors}\r\n              rows={6}\r\n              cols={10}\r\n              inputwidth=\"100%\"\r\n              inputheight=\"19rem\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              placeholder=\"Enter Description\"\r\n              defaultValue={product.description}\r\n              mandatory={true}\r\n            />\r\n          </div>\r\n\r\n          <button className={classes.submit} type=\"submit\">\r\n            Update\r\n          </button>\r\n          <button className={classes.back} onClick={goBackHandler}>\r\n            <IoIosReturnLeft />\r\n            &nbsp;\r\n            <span className={classes.text}> Go Back</span>\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\Textarea.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\forms\\UploadField.js",["273"],"import React from \"react\";\r\nimport classes from \"./CustomInputs.module.scss\";\r\nimport { BsUpload } from \"react-icons/bs\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst UploadField = ({\r\n  type,\r\n  register,\r\n  inputwidth,\r\n  inputheight,\r\n  label,\r\n  name,\r\n  placeholder,\r\n  defaultValue,\r\n  mandatory,\r\n  loading,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classes.upload}\r\n      style={{ width: inputwidth, height: inputheight }}\r\n    >\r\n      <input\r\n        ref={register({ required: mandatory === true ? true : false })}\r\n        type={type}\r\n        className={classes.input}\r\n        type={type}\r\n        id={name}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        defaultValue={defaultValue ? defaultValue : \"\"}\r\n      />\r\n      <button className={classes.btnUpload} onClick={(e) => e.preventDefault()}>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <BsUpload />\r\n            Upload\r\n          </>\r\n        )}\r\n      </button>\r\n      <label htmlFor={name} className={classes.label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadField;\r\n","D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\OrderListScreen.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\admin\\OrderItem.js",[],"D:\\Projets perso\\LineShop-Gaming\\frontend\\src\\components\\content\\shop\\ProductDetailReview.js",["274","275","276"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport classes from \"./ProductDetail.module.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SelectField from \"../forms/SelectField\";\r\nimport TextareaField from \"../forms/Textarea\";\r\nimport ErrorComponent from \"../../ErrorComponent\";\r\n\r\nconst ProductDetailReview = ({\r\n  dispatch,\r\n  product,\r\n  createReview,\r\n  user,\r\n  errorProductReview,\r\n  setAddReview,\r\n}) => {\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n\r\n  console.log(\"product\", product);\r\n  const ratingOptions = [\r\n    { label: \"1 - Poor\", value: \"1\" },\r\n    { label: \"2 - Fair\", value: \"2\" },\r\n    { label: \"3 - Good\", value: \"3\" },\r\n    { label: \"4 - Very Good\", value: \"4\" },\r\n    { label: \"5 - Excellent\", value: \"5\" },\r\n  ];\r\n\r\n  const onCancel = (e) => {\r\n    e.preventDefault();\r\n    setAddReview(false);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data\", data);\r\n    dispatch(\r\n      createReview(product._id, {\r\n        rating: data.rating.value,\r\n        comment: data.comment,\r\n      })\r\n    );\r\n    setAddReview(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.reviewContainer}>\r\n      <h1>{product.name}</h1>\r\n      <h2>Write a review</h2>\r\n      {errorProductReview && <ErrorComponent />}\r\n      <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={classes.formGroup}>\r\n          <SelectField\r\n            control={control}\r\n            error={errors}\r\n            inputwidth=\"100%\"\r\n            inputheight=\"4rem\"\r\n            label=\"Rating\"\r\n            name=\"rating\"\r\n            placeholder=\"Enter Rating\"\r\n            options={ratingOptions}\r\n            menuPlacement=\"bottom\"\r\n            isMulti={false}\r\n            mandatory={true}\r\n          />\r\n        </div>\r\n        <div className={classes.formGroup}>\r\n          <TextareaField\r\n            register={register}\r\n            error={errors}\r\n            rows={4}\r\n            // cols={21}\r\n            inputwidth=\"100%\"\r\n            label=\"Comment\"\r\n            name=\"comment\"\r\n            placeholder=\"Enter Comment\"\r\n            mandatory={false}\r\n          />\r\n        </div>\r\n        <div className={classes.btnGroup}>\r\n          <button className={classes.submit} type=\"submit\">\r\n            Submit\r\n          </button>\r\n          <button className={classes.cancel} onClick={onCancel}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetailReview;\r\n",{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":36,"column":7,"nodeType":"283","messageId":"284","endLine":36,"endColumn":13},{"ruleId":"281","severity":1,"message":"285","line":13,"column":5,"nodeType":"283","messageId":"284","endLine":13,"endColumn":11},{"ruleId":"281","severity":1,"message":"286","line":15,"column":5,"nodeType":"283","messageId":"284","endLine":15,"endColumn":10},{"ruleId":"281","severity":1,"message":"287","line":16,"column":5,"nodeType":"283","messageId":"284","endLine":16,"endColumn":16},{"ruleId":"281","severity":1,"message":"288","line":1,"column":38,"nodeType":"283","messageId":"284","endLine":1,"endColumn":44},{"ruleId":"281","severity":1,"message":"289","line":5,"column":3,"nodeType":"283","messageId":"284","endLine":5,"endColumn":12},{"ruleId":"281","severity":1,"message":"290","line":13,"column":43,"nodeType":"283","messageId":"284","endLine":13,"endColumn":50},{"ruleId":"281","severity":1,"message":"290","line":15,"column":43,"nodeType":"283","messageId":"284","endLine":15,"endColumn":50},{"ruleId":"281","severity":1,"message":"291","line":15,"column":10,"nodeType":"283","messageId":"284","endLine":15,"endColumn":35},{"ruleId":"281","severity":1,"message":"292","line":36,"column":42,"nodeType":"283","messageId":"284","endLine":36,"endColumn":53},{"ruleId":"281","severity":1,"message":"290","line":38,"column":43,"nodeType":"283","messageId":"284","endLine":38,"endColumn":50},{"ruleId":"281","severity":1,"message":"293","line":5,"column":10,"nodeType":"283","messageId":"284","endLine":5,"endColumn":17},{"ruleId":"281","severity":1,"message":"294","line":15,"column":19,"nodeType":"283","messageId":"284","endLine":15,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":75,"column":6,"nodeType":"297","endLine":75,"endColumn":70,"suggestions":"298"},{"ruleId":"281","severity":1,"message":"299","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":22},{"ruleId":"281","severity":1,"message":"300","line":4,"column":10,"nodeType":"283","messageId":"284","endLine":4,"endColumn":23},{"ruleId":"281","severity":1,"message":"301","line":5,"column":10,"nodeType":"283","messageId":"284","endLine":5,"endColumn":16},{"ruleId":"281","severity":1,"message":"302","line":6,"column":10,"nodeType":"283","messageId":"284","endLine":6,"endColumn":22},{"ruleId":"281","severity":1,"message":"303","line":7,"column":10,"nodeType":"283","messageId":"284","endLine":7,"endColumn":18},{"ruleId":"281","severity":1,"message":"290","line":28,"column":43,"nodeType":"283","messageId":"284","endLine":28,"endColumn":50},{"ruleId":"281","severity":1,"message":"304","line":34,"column":12,"nodeType":"283","messageId":"284","endLine":34,"endColumn":23},{"ruleId":"281","severity":1,"message":"293","line":4,"column":10,"nodeType":"283","messageId":"284","endLine":4,"endColumn":17},{"ruleId":"281","severity":1,"message":"305","line":9,"column":8,"nodeType":"283","messageId":"284","endLine":9,"endColumn":16},{"ruleId":"281","severity":1,"message":"290","line":37,"column":43,"nodeType":"283","messageId":"284","endLine":37,"endColumn":50},{"ruleId":"306","severity":1,"message":"307","line":27,"column":9,"nodeType":"308","endLine":27,"endColumn":20},{"ruleId":"281","severity":1,"message":"289","line":1,"column":17,"nodeType":"283","messageId":"284","endLine":1,"endColumn":26},{"ruleId":"281","severity":1,"message":"309","line":1,"column":28,"nodeType":"283","messageId":"284","endLine":1,"endColumn":36},{"ruleId":"281","severity":1,"message":"288","line":1,"column":38,"nodeType":"283","messageId":"284","endLine":1,"endColumn":44},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'trans4' is assigned a value but never used.","Identifier","unusedVar","'rating' is assigned a value but never used.","'image' is assigned a value but never used.","'description' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'control' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'errorOrders' is assigned a value but never used.","'FaTrash' is defined but never used.","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["312"],"'GiSplitCross' is defined but never used.","'GiHangingSign' is defined but never used.","'GiKing' is defined but never used.","'GiQueenCrown' is defined but never used.","'GiStrong' is defined but never used.","'errorCreate' is assigned a value but never used.","'Checkbox' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"315","text":"316"},[2342,2406],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]